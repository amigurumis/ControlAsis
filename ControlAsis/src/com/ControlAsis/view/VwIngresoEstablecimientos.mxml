<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="60%" height="95%" paddingLeft="10"  paddingTop="3"
	creationComplete="init()" xmlns:text="flash.text.*" horizontalScrollPolicy="off" verticalScrollPolicy="off"
	xmlns:componentes="cl.larrainvial.comun.componentes.*"	 
	xmlns:components="components.*">     
    <mx:Script>
		<![CDATA[
			import mx.utils.StringUtil;
    		import mx.controls.Text;
			import mx.formatters.NumberFormatter;		
			import mx.controls.Alert;
		    import com.ControlAsis.events.*;
			import com.ControlAsis.model.*;
			import com.ControlAsis.vo.*			
			import flash.net.URLRequest;
			import flash.net.URLRequestMethod;
			import mx.collections.ArrayCollection;
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.adobe.cairngorm.control.CairngormEvent;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;	
			
			[Bindable]
			public var model:ModelLocator = ModelLocator.getInstance();						
			public var eliminar :Boolean = false;	
						
//*****************************************************************************************************					
		private function init():void{		
				/* var EventEstado:ListaEstadosEvent= new ListaEstadosEvent();
				model.counter++;
				EventEstado.dispatch();				
		
				var EventTipoCV:ListaTipoCVEvent= new ListaTipoCVEvent();
				model.counter++;
				EventTipoCV.dispatch();				
				
				var EventAccion:ListaAccionEvent= new ListaAccionEvent();
				model.counter++;
				EventAccion.dispatch();				 
				
				var EventMercado:ListaMercadoEvent= new ListaMercadoEvent();
				model.counter++;
				EventMercado.dispatch();
				
				this.CargaGrilla();		 */
		}			
		
//*****************************************************************************************************				 
		public function Guardar():void{
			 /* 	var fechaEstado:Boolean = true;  	
        		var fecha1:String;
				var fecha2:String;
				var limite:String;	
				if(this.txtLimite.text==""){
					this.txtLimite.text = "0";				
				}
				if(this.txtRf.text==""){
					this.txtRf.text = "0";				
				}
				
				if (this.chLimite.selected == true){
				limite = "1"
				
				}else {limite = "0"}
				
				fecha1 = fechaDesde.text;
				fecha2 =  fechaHasta.text;	
						
				if ((fecha2 == null) && (fecha1 == null)) 
				{
				fecha1 = "";
				fecha2 = "";
				
				}else{					
					
					fechaEstado = this.ValidaFecha();									
				}					
				
				if (fechaEstado == true){
				 if(ValidaData()==true)
				
				{	
		  		  var oXMLGrabar :String;
		   		oXMLGrabar="<WsOrdenesGP><Parametros><idLibro></idLibro><Nemo>"+this.txtNemo.text+"</Nemo><Tipo>"+this.cbTipoOrden.selectedItem.id+"</Tipo><FechaDesde>"+fecha1+"</FechaDesde><FechaHasta>"+fecha2+"</FechaHasta><HoraHasta>"+this.hora.text+"</HoraHasta><EstadoLibro>1</EstadoLibro><TipoCV>"+this.cbTipoCV.selectedItem.id+"</TipoCV><Mercado>"+this.cbMercado.selectedItem.id+"</Mercado><ValorRf>"+StringUtil.trim(this.txtRf.text.replace(",","."))+"</ValorRf><Limite>"+limite+"</Limite><ValorLimite>"+StringUtil.trim(this.txtLimite.text.replace(",","."))+"</ValorLimite><TipOpe>I</TipOpe><Usuario>"+model.userLog+"</Usuario></Parametros></WsOrdenesGP>"	
				var GrabarEvent:IngModEliLibrosEvent= new IngModEliLibrosEvent(oXMLGrabar.toString()); 
				model.counter++;
				GrabarEvent.dispatch();	
				this.Limpiar();			
				
				}
			} */
		}    
			
//*****************************************************************************************************		
		public function CargaGrilla():void{
				var EventLibro:ListaLibroEvent= new ListaLibroEvent();
				model.counter++;
				EventLibro.dispatch();
		}
//*****************************************************************************************************				
		public function ValidaData():Boolean{
			/* 	var Valida:Boolean=true;
				
							if (this.txtNemo.text == "")
				{
					Alert.show("Debe ingresar Nemo", "Atencion");
					Valida=false;
					return Valida;	
				}
				if (this.cbTipoOrden.selectedIndex==0)
				{
					Alert.show("Debe seleccionar Tipo", "Atencion");
					Valida=false;
					return Valida;	
				}
				
				/* if (this.cbEstadoLibro.selectedIndex==0)
				{
					Alert.show("Debe seleccionar Estado", "Atencion");
					Valida=false;
					return Valida;	
				} */
				
		
//				
//				if (this.cbTipoCV.selectedIndex==0)
//				{
//					Alert.show("Debe seleccionar Tipo Compra Venta", "Atencion");
//					Valida=false;
//					return Valida;	
//				}
//				
//			
//				
//				if (this.cbMercado.selectedIndex==0)
//				{
//					Alert.show("Debe ingresar Mercado", "Atencion");
//					Valida=false;
//					return Valida;	
//				}
//				
//				if ((this.cbMercado.selectedIndex==1) && (this.txtRf.text == "0"))
//				{
//					Alert.show("Debe ingresar Valor para Renta Fija", "Atencion");
//					Valida=false;
//					return Valida;	
//				}
//				
//				if (this.hora.text == "")
//				{
//					Alert.show("Debe ingresar Hora termino", "Atencion");
//					Valida=false;
//					return Valida;	
//				}
//				
//				if (model.counterHora > 0)
//				{
//					Alert.show("Debe ingresar Hora Valida", "Atencion");
//					Valida=false;
//					return Valida;	
//				}
//				
//				if (this.fechaDesde.text == null)
//				{
//					Alert.show("Debe ingresar Fecha desde", "Atencion");
//					Valida=false;
//					return Valida;	
//				}
//				
//				if (this.fechaHasta.text == null)
//				{
//					Alert.show("Debe ingresar Fecha hasta", "Atencion");
//					Valida=false;
//					return Valida;	
//				} */
			
				//return Valida;
				return true;
		}        
//*****************************************************************************************************		
		private function ValidaFecha():Boolean{
			/* var value2:String;
			var value3:String;
			var var1:Boolean=true;
			var fechaInicial:Date;
			var fechaFinal:Date;
			var fechaHoy:Date = new Date(); 
						
 		 	if ((fechaDesde.text!="" ) &&  (fechaHasta.text !=""))
 			{
 				var añoHoy:int=fechaHoy.getFullYear(); 
 				var mesinicial:String=fechaDesde.text.split("-")[1];
 				var diainicial:String=fechaDesde.text.split("-")[2];
 				var añoinicial:String=fechaDesde.text.split("-")[0];
 				
 				var mesfinal:String=fechaHasta.text.split("-")[1];
 				var diafinal:String=fechaHasta.text.split("-")[2];
 				var añofinal:String=fechaHasta.text.split("-")[0];
 				
 				 					
 				if (añoinicial == añofinal)
 				{
 					if (mesfinal < mesinicial)
 					{
 						Alert.show("La Fecha Final no Puede Ser Menor que la Fecha Inicial, Favor Corregir");
 						var1=false;
 						
 					}
 					if ((mesfinal==mesinicial ) && (diafinal < diainicial))
 					{
 						var1=false;
 						Alert.show("La Fecha Final no Puede Ser Menor que la Fecha Inicial, Favor Corregir");
 						
 					}
 				}
 				if (añofinal < añoinicial)
 				{
 					Alert.show("La Fecha Final no Puede Ser Menor que la Fecha Inicial, Favor Corregir");
 					var1=false;
 				}
 				
 			}
 			else
 			{
 				var1=true;
 			}  */
 			//return var1;
 			return true;
		}	
		
//*****************************************************************************************************		
		public function EliminarEx(eventObj:CloseEvent):void
		{			
				/* if (eventObj.detail==1)
            	{
			
			var index:int;
			var idlibro:String;
			index = this.dgLibro.selectedIndex;
			idlibro= StringUtil.trim(this.dgLibro.selectedItem.idLibro.toString());
			model.listaLibro.removeItemAt(index); 
			
			var oXMLParamEli :String;
			oXMLParamEli = "<WsOrdenesGP><Parametros><idLibro>"+idlibro+"</idLibro><Nemo></Nemo><Tipo></Tipo><FechaDesde></FechaDesde><FechaHasta></FechaHasta><HoraHasta></HoraHasta><EstadoLibro></EstadoLibro><TipoCV></TipoCV><Mercado></Mercado><ValorRf>0</ValorRf><Limite></Limite><ValorLimite>0</ValorLimite><TipOpe>E</TipOpe><Usuario>"+model.userLog+"</Usuario></Parametros></WsOrdenesGP>"
			
			var GrabarEvent:IngModEliLibrosEvent= new IngModEliLibrosEvent(oXMLParamEli.toString()); 
			model.counter++;
			GrabarEvent.dispatch();				
            	} */
		}	 	

//*****************************************************************************************************	
			public function onEliminar():void
			{
				
				var xmlParam2: XML;
						Alert.yesLabel = "Si";
						Alert.noLabel = "No";
						Alert.show("El libro se cerrara. \n ¿Desea Realizar esta acción?","LarrainVial",3,null,EliminarEx);
						return;			
			}	
			
//*****************************************************************************************************	
		private function formateofecha(Fecha:String):String{
 			
 			var value2:String;
 			if (Fecha!="")
 				{
 	
 					var mes:String=Fecha.split("-")[1];
 					var año:String=Fecha.split("-")[2];
 					var dia:String=Fecha.split("-")[0];
 	
 					value2=año + "-" + mes + "-" +dia
 	
 				}
 			return value2;
 		}
 				
//*****************************************************************************************************		 							 
		 public function Limpiar() :void{
	 		this.txtNemo.text = "";
	 		//this.cbTipoCV.selectedIndex = 0;
	 		this.cbEstadoLibro.selectedIndex = 0;
	 		//this.cbMercado.selectedIndex = 0;
	 		this.txtRf.text = "";
	 		this.txtRf.visible = false;
	 		//this.lblRf.visible = false;
	 		//this.cbTipoOrden.selectedIndex = 0
	 		//this.chLimite.selected = false;
	 		this.txtLimite.text = "";
	 		this.txtLimite.visible = false;
	 		//this.hora.text = "";
	 		//this.fechaDesde.selectedDate = new Date();
	 		//this.fechaHasta.selectedDate = new Date(); 
	 		this.CargaGrilla();
		 }	
//*****************************************************************************************************		
	 public function VisibleText() :void{
	 	/* if(this.cbMercado.selectedIndex == 1){
	 		this.lblRf.visible = true;
	 		this.txtRf.visible = true;
	 		
	 	}else{
	 	this.lblRf.visible = false;
	 	this.txtRf.visible = false;
	 	
	 	} */
	 	
	 }
	 
//*****************************************************************************************************			 
	  public function VisibleLimite() :void{
	 /* 	if(this.chLimite.selected == true){
	 		this.txtLimite.visible = true;
	 		
	 	}else{
	 	this.txtLimite.visible = false;
	 	}
	 	 */
	 }
	 
//*****************************************************************************************************			 
	  public function tipoCambiar() :void{
	 	/* if(this.cbTipoOrden.selectedLabel == "COMPRA"){
	 		this.cbTipoCV.selectedIndex = 1;
	 		
	 	}else{
	 			if(this.cbTipoOrden.selectedLabel == "VENTA"){
	 		this.cbTipoCV.selectedIndex = 2;}else{this.cbTipoCV.selectedIndex = 0}
	 	} */
	 	
	 }
//*****************************************************************************************************		 	 
	
 private function keepToUper(event:Event):void
{
   var targetText:TextInput;
   targetText = event.target as TextInput;
   txtNemo.text = txtNemo.text.toUpperCase();
}

	 
//*****************************************************************************************************		 	
				private function formatNumber(item:Object, obj:Object):String
			{
					var res :String = item[obj.dataField];
					var nf:NumberFormatter = new NumberFormatter();
					
					nf.precision = 2;
					nf.rounding = "none";
					nf.decimalSeparatorTo = ",";
					nf.thousandsSeparatorTo = ".";
					nf.useThousandsSeparator = true;
					nf.useNegativeSign = true;
					
					return nf.format(item[obj.dataField]);
					
			}
		 
		]]>
	</mx:Script>
			    
<mx:HBox borderStyle="none" width="98%">
		<mx:Label text="Establecimientos" paddingTop="30" fontWeight="bold" fontSize="14" color="#484848" textAlign="right" width="100%" fontFamily="Verdana"/>
		
	</mx:HBox>
	<mx:HRule width="100%" styleName="barraTitulo" y="21"/>
<!-- ****************************************************************************************************-->		
	
		<mx:HBox width="1200" height="245" verticalAlign="top" horizontalAlign="center" horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<mx:Panel width="1200" height="214" headerHeight="15"  borderStyle="outset"  horizontalAlign="center" color="Black" >
			
			<mx:VBox width="100%" height="100%" paddingLeft="5"  >
			<mx:HBox width="100%" height="30" verticalAlign="middle" borderStyle="none"  horizontalAlign="left">
				<mx:VBox width="88" height="100%" paddingLeft="5" horizontalScrollPolicy="off" verticalScrollPolicy="off" >
					<mx:Label fontSize="10" fontWeight="normal" color="#000000" text="Nombre:" width="86"/>
				</mx:VBox>	
				<mx:TextInput id="txtNemo"  maxChars="50" width="204" height="22" change="keepToUper(event)"/>
				<mx:Label fontSize="10" fontWeight="normal" color="#000000" text="Rut"/>
				<mx:TextInput id="txtNemo0"  maxChars="50" width="204" height="22" change="keepToUper(event)"/>
					<mx:Label id="lblRf" fontSize="10" fontWeight="normal" color="#000000" text="Corte Mínimo:" visible="false"/>
					<mx:TextInput id="txtRf" maxChars="50" width="86" height="22" restrict="0-9" visible="false"/>
					
			</mx:HBox>
				<mx:HBox width="100%" height="100%" verticalAlign="middle" borderStyle="none"  horizontalAlign="left">
					<mx:VBox width="88" height="100%" paddingLeft="5" horizontalScrollPolicy="off" verticalScrollPolicy="off"  >
						<mx:Label fontSize="10" fontWeight="normal" color="#000000" text="Resolución:" width="78"/>
					</mx:VBox>	
					<mx:TextInput id="txtNemo3"  maxChars="50" width="204" height="22" change="keepToUper(event)"/>
					
				</mx:HBox>
				<mx:HBox width="100%" height="100%" verticalAlign="middle" borderStyle="none"  horizontalAlign="left">
					<mx:VBox width="88" height="100%" paddingLeft="5" horizontalScrollPolicy="off" verticalScrollPolicy="off" >
						<mx:Label fontSize="10" fontWeight="normal" color="#000000" text="Fono:" width="86"/>
					</mx:VBox>						
					<mx:TextInput id="txtNemo1"  maxChars="50" width="204" height="22" change="keepToUper(event)"/>
					<mx:Label fontSize="10" fontWeight="normal" color="#000000" text="Estado:" visible="false"/>
					<mx:ComboBox width="159" id="cbEstadoLibro" selectedItem="id"  labelField="descripcion" dataProvider="{model.listaEstados}" color="#000000"  visible="false"></mx:ComboBox>
				</mx:HBox>
				<mx:HBox width="100%" height="100%" verticalAlign="middle" borderStyle="none"  horizontalAlign="left">
					<mx:VBox width="88" height="100%" paddingLeft="5" horizontalScrollPolicy="off" verticalScrollPolicy="off" >
						<mx:Label fontSize="10" fontWeight="normal" color="#000000" text="Dirección:" width="86"/>
					</mx:VBox>
					<mx:TextInput id="txtNemo2"  maxChars="50" width="204" height="22" change="keepToUper(event)"/>
					<mx:Label fontSize="10" fontWeight="normal" color="#000000" text="Comuna:"/>
					<mx:ComboBox width="160" id="cbInstrumento0"  labelField="descripcion"  selectedItem="id" dataProvider="{model.listaInstrumento}" color="#000000" ></mx:ComboBox>
					
				</mx:HBox>
					<mx:HBox width="100%" height="100%" verticalAlign="middle" borderStyle="none"  horizontalAlign="left">
					<mx:VBox width="88" height="100%" paddingLeft="5" horizontalScrollPolicy="off" verticalScrollPolicy="off" >
					</mx:VBox>								
					<mx:TextInput id="txtLimite"  restrict="0-9," maxChars="50" width="86" height="22" visible="false"/>
					</mx:HBox>
				<mx:HBox width="100%" height="100%" verticalAlign="middle" borderStyle="none"  horizontalAlign="center">
						<mx:Button id="btnIngresar" icon="@Embed(source='assets/CTGuardar.png')" label="Ingresar" color="#000000" fontSize="10" fontWeight="bold" click="Guardar()"></mx:Button>							
				</mx:HBox>
				
			</mx:VBox>
		</mx:Panel>
		
		</mx:HBox>		
		 
	<mx:DataGrid width="98%" height="50%" id="dgLibro" editable="false"  dataProvider="{model.listaLibro}" >
		<mx:columns>
			<mx:DataGridColumn headerText="id" dataField="idLibro"  visible="false" />
			<mx:DataGridColumn headerText="Nombre Establecimiento"  dataField="Nemotecnico" textAlign="right" width="100"  visible="true"/>
			<mx:DataGridColumn headerText="Rut"  dataField="NemoVisible" textAlign="right" width="100"  visible="true"/>
			<mx:DataGridColumn headerText="Resolución" dataField="Tipo" width="100"  textAlign="right" visible = "true" />
			<mx:DataGridColumn headerText="Dirección" dataField="FechaDesde" textAlign="right" width="100" />
			<mx:DataGridColumn headerText="Telefono" dataField="FechaHasta" textAlign="right" width="100" />
		
			<mx:DataGridColumn headerText="Cerrar" id="btnEliminarMod"  width="30" editable="false" >	
			<mx:itemRenderer>
			     <mx:Component>
				     <mx:HBox horizontalAlign="center">
				        <mx:Image  click="{outerDocument.onEliminar()}"  toolTip="Cerrar" source="assets/ico_menos.png" buttonMode="true"  />
				     </mx:HBox>
			    </mx:Component>
			</mx:itemRenderer>				
			</mx:DataGridColumn>
		</mx:columns>
		</mx:DataGrid>
	
			
</mx:VBox>

